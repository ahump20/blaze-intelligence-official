name: Blaze Intelligence CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

  validate-stats:
    name: Validate Marketing Stats
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate pricing guardrails
        run: npm run validate:pricing

      - name: Run marketing stats tests
        run: npm run validate:stats

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [security-scan, validate-stats]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build site
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  deploy:
    name: Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: blaze-intelligence
          directory: .
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  audit-data:
    name: Data Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Audit marketing stats
        run: |
          node -e "
          const fs = require('fs');
          const stats = JSON.parse(fs.readFileSync('./src/data/marketing-stats.json', 'utf8'));
          const now = new Date();
          const lastAudit = new Date(stats.dataValidation.lastAudit);
          const daysSinceAudit = (now - lastAudit) / (1000 * 60 * 60 * 24);
          
          console.log('Days since last audit:', Math.floor(daysSinceAudit));
          
          if (daysSinceAudit > 90) {
            console.error('Marketing stats audit overdue!');
            process.exit(1);
          }
          
          console.log('Marketing stats audit is current');
          "

      - name: Check for data drift
        run: npm run validate:pricing

# Schedule for quarterly data audits
on:
  schedule:
    - cron: '0 0 1 */3 *'  # First day of every quarter