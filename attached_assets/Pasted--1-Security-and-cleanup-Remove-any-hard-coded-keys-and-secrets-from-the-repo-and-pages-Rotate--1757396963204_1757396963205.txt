	1.	Security and cleanup

	•	Remove any hard-coded keys and secrets from the repo and pages. Rotate all exposed tokens now.
	•	Add .env and use Replit “Secrets” for runtime values.
	•	Run a secret sweep: npx trufflehog filesystem --only-verified=false .

	2.	Replace fake data with live sources

	•	Delete any fabricated season stats from JS. Until live feeds are wired, show “Demo data” badges and timestamps.
	•	Implement three data adapters with caching:
	•	MLB: official MLB Stats API (public) or your licensed provider.
	•	NFL: your licensed provider.
	•	College football: your licensed provider or CollegeFootballData API.
	•	Structure: src/data/{mlb,nfl,cfb}/adapter.ts exporting getTeamSummary(), getPlayerSummary(), getLiveGames().
	•	Add a 5-minute KV/Redis-like cache layer; on Replit use in-memory fallback with stale-while-revalidate.
	•	Show lastUpdated, source, and confidence ranges on all widgets.

	3.	API proxy and CORS

	•	Create /api/{mlb,nfl,cfb}/… routes on the Node server that call adapters. Do not call third-party APIs from the browser.
	•	Lock CORS to the current Replit run URL and your production domains only.

	4.	Production build and deploy path

	•	Keep Express only for dev. For prod, build static to dist/ and deploy on Cloudflare Pages; use a Worker as the API proxy with caching.
	•	Verify wrangler.toml routes, add /healthz and /metrics endpoints in the Worker.
	•	Add npm run build && npm run preview script parity with Pages.

	5.	Three.js and performance

	•	Lazy-load Three.js and heavy visuals after first interaction.
	•	Defer non-critical scripts, add rel=preconnect to data hosts, compress images, generate responsive <img srcset> for the founder photo.
	•	Target Lighthouse ≥ 90 across PWA/Perf/SEO/Accessibility.

	6.	Content accuracy guardrails

	•	Scrub copy for claims. No “trusted by pros” language.
	•	Add league focus toggles: CFB, NFL, MLB. Default to the 2025–2026 season context.
	•	Every stat card: team, season, asOf timestamp, source.

	7.	Monitoring and errors

	•	Add Sentry or equivalent via env var only.
	•	Log adapter failures with rate-limit/backoff and serve cached last-good data.

	8.	Tests and CI

	•	Unit tests for each adapter with recorded fixtures.
	•	Playwright e2e for homepage load, sport switcher, and live widget render.
	•	Minimal GitHub Action for build + tests.

	9.	Accessibility and SEO

	•	Alt text for founder image, proper landmarks, focus states.
	•	OG/Twitter meta, JSON-LD org markup.

	10.	Hand-off artifacts

	•	Update README.md with env keys required, run commands, and deployment steps.
	•	Add /docs/data-contracts.md describing adapter responses.

Commands to start now: