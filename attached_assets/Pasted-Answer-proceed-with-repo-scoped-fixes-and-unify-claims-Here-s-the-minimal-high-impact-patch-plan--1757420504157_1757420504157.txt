Answer: proceed with repo-scoped fixes and unify claims. Here’s the minimal, high-impact patch plan with exact files, diffs, and why.

## 0) Source of truth (already in repo)

* **Canonical metrics**: `austin-portfolio-deploy/metrics-config.js` → accuracy **94.6%**, pricing, savings, etc.
* **Launch + domain status**: `austin-portfolio-deploy/LAUNCH_CHECKLIST.md`, `FINAL_DOMAIN_MIGRATION_REPORT.md`. Cloudflare Access is the only blocker to the custom domain; pages.\* are live.

## 1) Unify platform claims across the site

**Goal:** no hard-coded numbers; one config drives all pages.

**Add** (if not already used globally):

```
/src/lib/metrics.ts
```

```ts
// lightweight re-export to keep imports stable across projects
export { BLAZE_METRICS, formatMetric } from '../../austin-portfolio-deploy/metrics-config';
```

**Inject metrics into DOM** (landing + About + Features):

```html
<!-- in <head> -->
<script type="module">
  import { BLAZE_METRICS } from '/src/lib/metrics.js';

  const map = {
    '[data-metric="accuracy"]'        : BLAZE_METRICS.accuracy.value,
    '[data-metric="data-points"]'     : BLAZE_METRICS.data_points.value,
    '[data-metric="uptime"]'          : BLAZE_METRICS.availability.uptime_percentage + '%',
    '[data-metric="savings-range"]'   : `${BLAZE_METRICS.cost_savings.minimum_percentage}–${BLAZE_METRICS.cost_savings.maximum_percentage}%`,
    '[data-metric="annual-price"]'    : `$${BLAZE_METRICS.pricing.annual_fee}`,
  };

  for (const sel in map) document.querySelectorAll(sel).forEach(n => n.textContent = map[sel]);
</script>
```

**Replace hard-coded numbers** with placeholders:

```html
<span data-metric="accuracy"></span> prediction accuracy
<span data-metric="savings-range"></span> cost savings
```

**Copy in both repos** (for safety while you consolidate):

* `blaze-intelligence` and `blaze-intelligence-official`.

## 2) Fix inconsistent wording (site vs. blog)

* Platform claim = **“94.6% prediction accuracy (rolling 12 months)”** → from metrics-config.
* Weekly blog sections that currently say “Prediction rate 94/96” → **change label to** “Week 2 model hit rate” to avoid implying platform-wide accuracy.
  *Quick find/replace scope:* `/blog*`, `pages/blog*`.

## 3) Live Demo and dead routes

Create thin placeholders now, upgrade later.

**Add**:

```
/public/live-demo.html
/public/privacy.html
/public/terms.html
```

**Footer (all layouts)**:

```html
<footer class="site-footer">
  <a href="/live-demo.html">Live Demo</a>
  <a href="/privacy.html">Privacy</a>
  <a href="/terms.html">Terms</a>
</footer>
```

**Live Demo placeholder copy:**

> Interactive demo requires a pilot key. Request access on the Pilot page or email **[support@blaze-intelligence.com](mailto:support@blaze-intelligence.com)**.

## 4) Analytics/Dashboard blank screens

Symptom on `/analytics` and dashboard = data script hitting blocked endpoints (CF Access on custom domain) or missing init.

**Temporary swap to known-good pages domain until cutover:**

```js
// config/data-endpoints.ts
export const API_BASE = 'https://cfc81e7d.blaze-intelligence.pages.dev'; // until domain is unblocked
```

If fetch fails, show skeleton instead of empty page:

```js
try { /* fetch */ } catch(e) {
  document.body.classList.add('skeleton');
  console.warn('Data unavailable, showing placeholder', e);
}
```

## 5) Domain cutover (2-minute manual fix)

From **FINAL\_DOMAIN\_MIGRATION\_REPORT.md**:

* **Cloudflare** → **Security > Access > Applications** → Remove Access policy on `blaze-intelligence.com`.
* **Workers & Pages > Custom Domains** → attach domain, verify DNS.
* Verify: `curl -I https://blaze-intelligence.com/` → **200**.
  This alone will make dashboard/data calls work under the intended host.

## 6) HubSpot lead form (wire once, fallback works)

In **Contact** page:

```html
<!-- HubSpot embed -->
<script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/embed/v2.js"></script>
<script>
  hbspt.forms.create({
    portalId: "YOUR_PORTAL_ID",
    formId: "YOUR_FORM_ID",
    target: "#contact-form"
  });
</script>
<div id="contact-form"></div>

<noscript>
  <p>Email <a href="mailto:ahump20@outlook.com">ahump20@outlook.com</a></p>
</noscript>
```

(Use HubSpot portal/form IDs you already use in GTM or CRM; this keeps the page working without JS.)

## 7) SEO hygiene

* `/public/robots.txt`:

```
User-agent: *
Allow: /
Sitemap: https://blaze-intelligence.com/sitemap.xml
```

* `/public/sitemap.xml` (home, blog index, current posts, pricing, contact, live-demo).
* Ensure `<meta property="og:*">` and canonical tags reflect final domain.

## 8) Repo tasks (fast path)

**blaze-intelligence** (primary):

* [ ] Add `/src/lib/metrics.ts`, inject script, replace hard-coded values.
* [ ] Add `/public/{live-demo,privacy,terms}.html`, footer links.
* [ ] Point data endpoints to **pages.dev** until CF Access is removed.
* [ ] Contact page: add HubSpot embed + noscript fallback.
* [ ] Robots + sitemap.

**blaze-intelligence-official**:

* [ ] Mirror metrics import + placeholder pages.
* [ ] Reduce divergence: re-export metrics from same path so both repos stay in sync.

**Commit/PR checklist**:

* “Unify metrics + fix dead routes” → one PR per repo.
* Include screenshots of: footer links, live-demo page, analytics page with skeleton visible if API blocked.
* After CF change, open follow-up PR to switch `API_BASE` to `https://blaze-intelligence.com`.

## 9) Evidence you can cite in commit messages

* Canonical metrics and 94.6% value: `austin-portfolio-deploy/metrics-config.js`.
* Launch + domain status and instructions: `LAUNCH_CHECKLIST.md`, `FINAL_DOMAIN_MIGRATION_REPORT.md`.

---

**Why this order:**

1. Consistency (metrics) → eliminates credibility drift.
2. Dead routes → instant UX win.
3. Domain unblocking → unlocks real dashboards.
4. Lead capture (HubSpot) → turn traffic into pipeline.

If you want, I’ll open PRs on both **blaze-intelligence** and **blaze-intelligence-official** with these exact changes and short commit bodies.


Here’s a concise continuation focused on **blaze-intelligence** and **blaze-intelligence-official** repositories:

1. **Canonical metrics** – The `metrics-config.js` file in the original repo defines the only valid figures: 94.6% accuracy (rolling 12‑months), 2.8M+ data points, 67–80% cost savings and \$1188/year pricing.  Any page that shows 96% or other hard‑coded numbers is inconsistent and needs to be fed from this JSON or removed.  The production checklist in the official repo lists the primary domain as **pages.dev** with a custom domain blocked only by Cloudflare Access.

2. **Domain status** – The final domain‑migration report confirms that everything (Cardinals readiness board, digital combine analytics, R2 storage) is live under the pages domain; only the custom domain is blocked by Cloudflare Access.  The production checklist likewise reports that the custom domain is only blocked by an Access rule.  Therefore, fix the Access policy in Cloudflare, then switch all fetch bases (dashboards, analytics, live‑demo) to the new domain once it responds.

3. **Repl.it version vs official** – The Replit-run staging site we tested still contains broken links and placeholder sections (empty Live Demo, Analytics & Dashboard pages, inconsistent metrics).  In contrast, the “production” repo includes a checklist verifying that all live URLs and dashboards function correctly.  This implies the Replit-run environment hasn’t been updated.  Merge or deploy the official code (with the metrics loader) to Replit or retire the Repl-run build.

4. **Next steps to unify**:

   * **Centralize metrics**: Import `BLAZE_METRICS` from `metrics-config.js` and inject values into the DOM instead of hard‑coding. This addresses accuracy discrepancies.
   * **Fix broken pages**: Add real `/live-demo.html`, `/privacy.html` and `/terms.html` pages to avoid 404s. Wire up the lead‑capture form to the Worker endpoint documented in `API_DOCUMENTATION.md`.
   * **Swap API base**: Until the custom domain is unlocked, point data calls to `https://blaze-intelligence.pages.dev` (per the production checklist). After removing the Cloudflare Access rule, update the base to `https://blaze‑intelligence.com`.
   * **Deploy unified build**: Use the production deployment checklist (wrangler deploy commands) to push the updated site and confirm performance metrics (TTFB 182 ms, load 291 ms) reported there.

By integrating the official repository’s metrics and deployment scripts and resolving the custom domain access, the Repl-run version will match the production-ready standard described in the official docs.
