openapi: 3.0.3
info:
  title: Blaze Intelligence API
  description: |
    # Blaze Intelligence Sports Analytics API
    
    Institutional-grade sports intelligence platform providing real-time analytics, 
    predictive modeling, and comprehensive data insights for professional sports teams, 
    betting syndicates, and media organizations.
    
    ## Authentication
    All API requests require authentication using Bearer tokens. Include your API key 
    in the Authorization header:
    
    ```
    Authorization: Bearer YOUR_API_KEY
    ```
    
    ## Rate Limiting
    - **Starter**: 1,000 requests/hour
    - **Professional**: 10,000 requests/hour  
    - **Enterprise**: Unlimited
    
    ## WebSocket Connections
    Real-time data streaming available at `wss://api.blaze-intelligence.com/v1/stream`
    
  version: 1.0.0
  termsOfService: https://blaze-intelligence.com/terms
  contact:
    name: Blaze Intelligence Support
    email: support@blaze-intelligence.com
    url: https://blaze-intelligence.com/support
  license:
    name: Proprietary
    url: https://blaze-intelligence.com/license

servers:
  - url: https://api.blaze-intelligence.com/v1
    description: Production API
  - url: https://staging-api.blaze-intelligence.com/v1
    description: Staging API
  - url: http://localhost:3000/v1
    description: Development server

security:
  - BearerAuth: []
  - ApiKeyAuth: []

tags:
  - name: Games
    description: Live game data and historical game information
  - name: Teams
    description: Team statistics, rosters, and performance metrics
  - name: Players
    description: Individual player statistics and performance analysis
  - name: Predictions
    description: AI-powered predictions and probability modeling
  - name: Betting
    description: Betting lines, odds movements, and arbitrage opportunities
  - name: Analytics
    description: Advanced analytics and custom metrics
  - name: Webhooks
    description: Webhook management for real-time notifications

paths:
  /games:
    get:
      tags:
        - Games
      summary: List games
      description: Retrieve a list of games with optional filtering
      operationId: listGames
      parameters:
        - name: sport
          in: query
          description: Filter by sport
          schema:
            type: string
            enum: [MLB, NFL, NBA, NCAA_FB, NCAA_BB]
        - name: date
          in: query
          description: Filter by date (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: team_id
          in: query
          description: Filter by team ID
          schema:
            type: string
        - name: status
          in: query
          description: Filter by game status
          schema:
            type: string
            enum: [scheduled, in_progress, final, postponed, cancelled]
        - name: limit
          in: query
          description: Number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Game'
                  meta:
                    $ref: '#/components/schemas/PaginationMeta'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'

  /games/{gameId}:
    get:
      tags:
        - Games
      summary: Get game details
      description: Retrieve detailed information about a specific game
      operationId: getGame
      parameters:
        - name: gameId
          in: path
          required: true
          description: Unique game identifier
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameDetail'
        '404':
          $ref: '#/components/responses/NotFound'

  /games/{gameId}/live:
    get:
      tags:
        - Games
      summary: Get live game data
      description: Retrieve real-time data for an in-progress game
      operationId: getLiveGameData
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
        - name: include
          in: query
          description: Additional data to include
          schema:
            type: array
            items:
              type: string
              enum: [play_by_play, win_probability, player_stats, betting_lines]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveGameData'

  /predictions/game/{gameId}:
    get:
      tags:
        - Predictions
      summary: Get game predictions
      description: Retrieve AI-powered predictions for a specific game
      operationId: getGamePredictions
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
        - name: models
          in: query
          description: Prediction models to use
          schema:
            type: array
            items:
              type: string
              enum: [neural_network, random_forest, gradient_boost, ensemble]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamePrediction'

  /predictions/player/{playerId}:
    post:
      tags:
        - Predictions
      summary: Generate player performance prediction
      description: Generate AI-powered performance predictions for a player
      operationId: predictPlayerPerformance
      parameters:
        - name: playerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gameId:
                  type: string
                  description: Game ID for prediction context
                metrics:
                  type: array
                  items:
                    type: string
                    enum: [points, rebounds, assists, yards, touchdowns, batting_average]
                timeframe:
                  type: string
                  enum: [game, week, season]
                confidence_interval:
                  type: number
                  minimum: 0.5
                  maximum: 0.99
                  default: 0.95
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerPrediction'

  /analytics/query:
    post:
      tags:
        - Analytics
      summary: Execute custom analytics query
      description: Run custom analytics queries using our proprietary query language
      operationId: executeAnalyticsQuery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: BlazeQL query string
                  example: "SELECT player_name, AVG(points) FROM nba_games WHERE team = 'DAL' GROUP BY player_name"
                parameters:
                  type: object
                  additionalProperties: true
                format:
                  type: string
                  enum: [json, csv, parquet]
                  default: json
      responses:
        '200':
          description: Query executed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                  meta:
                    type: object
                    properties:
                      query_time_ms:
                        type: integer
                      rows_returned:
                        type: integer
                      cache_hit:
                        type: boolean

  /betting/lines:
    get:
      tags:
        - Betting
      summary: Get betting lines
      description: Retrieve current betting lines from multiple sportsbooks
      operationId: getBettingLines
      parameters:
        - name: gameId
          in: query
          schema:
            type: string
        - name: sport
          in: query
          schema:
            type: string
            enum: [MLB, NFL, NBA, NCAA_FB, NCAA_BB]
        - name: market
          in: query
          schema:
            type: string
            enum: [spread, moneyline, totals, props, futures]
        - name: sportsbooks
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BettingLine'

  /webhooks:
    post:
      tags:
        - Webhooks
      summary: Create webhook
      description: Register a new webhook endpoint
      operationId: createWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
                - events
              properties:
                url:
                  type: string
                  format: uri
                  description: HTTPS endpoint to receive webhooks
                events:
                  type: array
                  items:
                    type: string
                    enum: 
                      - game.started
                      - game.ended
                      - score.updated
                      - odds.changed
                      - prediction.generated
                      - alert.triggered
                secret:
                  type: string
                  description: Secret key for webhook signature verification
                active:
                  type: boolean
                  default: true
      responses:
        '201':
          description: Webhook created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    Game:
      type: object
      properties:
        id:
          type: string
          format: uuid
        sport:
          type: string
          enum: [MLB, NFL, NBA, NCAA_FB, NCAA_BB]
        home_team:
          $ref: '#/components/schemas/TeamSummary'
        away_team:
          $ref: '#/components/schemas/TeamSummary'
        scheduled_time:
          type: string
          format: date-time
        status:
          type: string
          enum: [scheduled, in_progress, final, postponed, cancelled]
        venue:
          $ref: '#/components/schemas/Venue'
        weather:
          $ref: '#/components/schemas/Weather'

    GameDetail:
      allOf:
        - $ref: '#/components/schemas/Game'
        - type: object
          properties:
            score:
              type: object
              properties:
                home:
                  type: integer
                away:
                  type: integer
            period:
              type: string
            time_remaining:
              type: string
            possession:
              type: string
            statistics:
              type: object
              additionalProperties: true
            play_by_play:
              type: array
              items:
                $ref: '#/components/schemas/Play'

    LiveGameData:
      type: object
      properties:
        game:
          $ref: '#/components/schemas/GameDetail'
        win_probability:
          type: object
          properties:
            home:
              type: number
              minimum: 0
              maximum: 1
            away:
              type: number
              minimum: 0
              maximum: 1
            last_updated:
              type: string
              format: date-time
        momentum:
          type: object
          properties:
            team:
              type: string
            strength:
              type: number
              minimum: -1
              maximum: 1
            factors:
              type: array
              items:
                type: string
        next_score_probability:
          type: object
          properties:
            team:
              type: string
            type:
              type: string
              enum: [touchdown, field_goal, safety, home_run, three_pointer, two_pointer]
            probability:
              type: number
              minimum: 0
              maximum: 1

    GamePrediction:
      type: object
      properties:
        game_id:
          type: string
        predictions:
          type: object
          properties:
            winner:
              type: object
              properties:
                team:
                  type: string
                probability:
                  type: number
                confidence:
                  type: number
            spread:
              type: object
              properties:
                value:
                  type: number
                confidence_interval:
                  type: object
                  properties:
                    lower:
                      type: number
                    upper:
                      type: number
            total:
              type: object
              properties:
                value:
                  type: number
                over_probability:
                  type: number
                under_probability:
                  type: number
        model_performance:
          type: object
          properties:
            accuracy:
              type: number
            precision:
              type: number
            recall:
              type: number
            f1_score:
              type: number

    PlayerPrediction:
      type: object
      properties:
        player_id:
          type: string
        predictions:
          type: array
          items:
            type: object
            properties:
              metric:
                type: string
              predicted_value:
                type: number
              confidence_interval:
                type: object
                properties:
                  lower:
                    type: number
                  upper:
                    type: number
              probability_distribution:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                    probability:
                      type: number

    TeamSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        abbreviation:
          type: string
        logo_url:
          type: string
          format: uri
        record:
          type: object
          properties:
            wins:
              type: integer
            losses:
              type: integer
            ties:
              type: integer

    BettingLine:
      type: object
      properties:
        sportsbook:
          type: string
        game_id:
          type: string
        market:
          type: string
        lines:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              value:
                type: number
              odds:
                type: number
              movement:
                type: string
                enum: [up, down, stable]
              last_updated:
                type: string
                format: date-time

    Webhook:
      type: object
      properties:
        id:
          type: string
          format: uuid
        url:
          type: string
          format: uri
        events:
          type: array
          items:
            type: string
        secret:
          type: string
        active:
          type: boolean
        created_at:
          type: string
          format: date-time
        last_triggered:
          type: string
          format: date-time

    Play:
      type: object
      properties:
        id:
          type: string
        period:
          type: integer
        time:
          type: string
        type:
          type: string
        description:
          type: string
        yards:
          type: integer
        result:
          type: string
        win_probability_change:
          type: number
        expected_points_added:
          type: number

    Venue:
      type: object
      properties:
        name:
          type: string
        city:
          type: string
        state:
          type: string
        capacity:
          type: integer
        surface:
          type: string

    Weather:
      type: object
      properties:
        temperature:
          type: number
        wind_speed:
          type: number
        wind_direction:
          type: string
        precipitation:
          type: number
        conditions:
          type: string

    PaginationMeta:
      type: object
      properties:
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
        has_more:
          type: boolean

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    RateLimitExceeded:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
        X-RateLimit-Remaining:
          schema:
            type: integer
        X-RateLimit-Reset:
          schema:
            type: integer
